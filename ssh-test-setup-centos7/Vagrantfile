require          'fileutils'
require_relative 'common-functions'

mongodb_version = "4.0"
num_test_servers= 3

$conditional_install_mongodb = <<-INSTALL_SCRIPT
if [ ! -f /etc/yum/repos.d/mongodb-org-#{mongodb_version}.repo ]; then
      [ -d /etc/yum/repos.d ] || sudo mkdir -p /etc/yum/repos.d
      sudo mv /home/vagrant/mongodb-org-#{mongodb_version}.repo /etc/yum/repos.d/
fi
if ! rpm --quiet --query mongodb-org; then
   echo "MongoDB binaries not found, installing"
   sudo yum install -y mongodb-org
fi
INSTALL_SCRIPT

# Generate the TLS certs if they don't exist yet
CommonSetupFunctions.setupTLSCerts(ARGV[0], num_test_servers)

# Regen the ssh keys used to communicate between testdriver and rs[1-3] if we're in up or provision mode
insecure_ssh_pub_key = CommonSetupFunctions.setupSSHKeys(ARGV[0])
  

Vagrant.configure("2") do |config|
  if Vagrant.has_plugin?("vagrant-cachier")
    puts("Configured vagrant-cachier")
    config.cache.scope = :box
  end

  # config.vm.provider "docker" do |d, override|
  #   puts("Docker-specific configuration")
  #   d.image = "centos:7"
  # end
  
  config.vm.provider "virtualbox" do |vb|
    #override.vm.box = "bento/centos-7.9"
    #vb.customize ["modifyvm", :id, "--cpus", "1", "--memory", "1024"]
    puts("Configuring VirtualBox provider")
    vb.memory = 1024
    vb.cpus = 1
    vb.linked_clone = true
  end

  config.vm.box = "bento/centos-7.9"

  config.vbguest.installer_options[:allow_kernel_upgrade] = true
  config.vbguest.installer_hooks[:before_install] = ["yum install -y deltarpm"]

  config.vm.provision "hosts", :sync_hosts => true
  config.vm.synced_folder ".", "/vagrant", disabled: true

  if ARGV[0] == "up" || ARGV[0] == 'provision'
    config.vm.provision "shell", inline: "[ -d /home/vagrant/tls ] || mkdir -p tls", privileged: false
    config.vm.provision "shell", inline: "[ -d /home/vagrant/.ssh/ ] || mkdir /home/vagrant/.ssh", privileged: false
    
    config.vm.provision "file",  source: "tls/CA/root.crt", destination: "tls/root.crt"
    config.vm.provision "shell", inline: '[ -d /etc/yum/repos.d ] || sudo mkdir -p /etc/yum/repos.d'
    config.vm.provision "file",  source: "mongo-yum-#{mongodb_version}.repo", destination: "mongodb-org-#{mongodb_version}.repo"
    config.vm.provision "shell", inline: $conditional_install_mongodb    
  end

  # Create a three node RS, all with the same configuration
  (1..3).each do |i|
    config.vm.define "rs-#{i}" do |node|
      node_ip = 73 + i
      node.vm.network "private_network", ip: "192.168.56.#{node_ip}"
      node.vm.hostname = "rs#{i}.mongodb.test"
      
      if ARGV[0] == "up" || ARGV[0] == 'provision'
        ['mongod-ssh-rs.conf', 'mongod-ssh-ssl.conf', 'mongod-ssh-x509.conf', 'mongod-ssh-x509-noauth.conf'].each do |filename|
          node.vm.provision 'file',source: filename, destination: filename
        end       
        node.vm.provision "file",  source: "tls/rs#{i}/rs#{i}.pem", destination: "tls/mongo.pem"
        ['data','data-ssl','data-x509'].each do |dir|
          node.vm.provision "shell", inline: "[ -d /home/vagrant/#{dir} ] || mkdir -p #{dir}", privileged: false
        end
        ['init-replicaset.js', 'init-replicaset-ssl.js', 'init-replicaset-x509.js', 'create-test-user.js', 'create-test-user-x509.js', 'start-mongod-replset-node.sh'].each do |file|
          node.vm.provision 'file',source: file, destination: file
        end
        node.vm.provision "shell", inline: 'chown vagrant:vagrant start-mongod-replset-node.sh ; chmod 700 start-mongod-replset-node.sh'
        ['/home/vagrant/data/keyfile', '/home/vagrant/data-ssl/keyfile', '/home/vagrant/data-x509/keyfile'].each do |destname|
          node.vm.provision 'file',  source: 'test-keyfile', destination: destname
          node.vm.provision "shell", inline: "chown vagrant:vagrant #{destname} ; chmod 600 #{destname}"
        end
      end
      node.vm.provision "shell", inline: <<-SSHD_CONFIG
        sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
        systemctl restart sshd.service
      SSHD_CONFIG
      node.vm.provision "shell", inline: "echo #{insecure_ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys", privileged: false
      node.vm.provision "file",  source: "mongod-service.conf", destination: "mongod-service.conf"
      node.vm.provision "shell", inline: "sudo mv mongod-service.conf /etc/mongod.conf"
      node.vm.provision "shell", inline: 'sudo systemctl stop mongod && sudo systemctl disable mongod'
      node.vm.provision "shell", inline: '$HOME/start-mongod-replset-node.sh', privileged: false
    end
  end
  
  config.vm.define :testdriver do |tester|
    tester.vm.box = 'bento/centos-7.9'
    tester.vm.network :private_network, ip: "192.168.56.98"
    tester.vm.hostname = "testdriver.mongodb.test"
    if ARGV[0] == "up" || ARGV[0] == 'provision'
      tester.vm.provision "file",  source: "tls/testdriver/testdriver.pem", destination: "tls/testdriver.pem"
      tester.vm.provision "file",  source: 'tls/user-cert/user-cert.pem', destination: 'tls/user-cert.pem'
      tester.vm.provision "file",  source: 'ssh/id_ed25519', destination: '.ssh/id_ed25519'
      tester.vm.provision "file",  source: 'ssh/id_ed25519.pub', destination: '.ssh/id_ed25519.pub'
    end
    ['config-timeouts.js', 'setup-test-env.sh'].each do |file|
      tester.vm.provision 'file', source: file, destination: file
    end
    tester.vm.provision "shell", inline: 'sudo yum install -y java-11-openjdk git emacs-nox wget tmux gcc python3 python3-pip python3-devel'
    tester.vm.provision "shell", inline: "sudo pip3 install mtools psutil pymongo"
    tester.vm.provision 'shell', inline: <<-LEIN_INSTALL
    if [ ! -d /home/vagrant/bin ]; then
      mkdir -p /home/vagrant/bin
    fi
    if [ ! -f /home/vagrant/bin/lein ]; then
      wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein -O /home/vagrant/bin/lein
      chown vagrant:vagrant /home/vagrant/bin/lein
      chmod a+x /home/vagrant/bin/lein
    fi
    LEIN_INSTALL
    tester.vm.provision "shell", inline: '[ -d /etc/yum/repos.d ] || sudo mkdir -p /etc/yum/repos.d'
    tester.vm.provision "shell", inline: "mkdir -p git-repo/mdb-runtime-tester"
    tester.vm.synced_folder "../../mdb-runtime-tester/", "/home/vagrant/git-repo/mdb-runtime-tester"
    tester.vm.synced_folder '../../clj-pem-decoder/', '/home/vagrant/git-repo/clj-pem-decoder'
    tester.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--cpus", "2", "--memory", "3072"]
    end
    tester.vm.provision 'shell', inline: 'sudo systemctl stop mongod && sudo systemctl disable mongod'
    tester.vm.provision :reload
    tester.vm.provision 'shell', inline: '[ -d /home/vagrant/tmp/mdb-test ] || /home/vagrant/setup-test-env.sh', privileged: false
  end

  config.vm.define "rs-3" do |rs_node|
    rs_node.vm.provision 'shell', inline: 'mongo mongodb://localhost:27017 init-replicaset.js', privileged: false
    rs_node.vm.provision 'shell', inline: 'mongo mongodb://localhost:28017 --ssl --sslCAFile tls/root.crt init-replicaset-ssl.js', privileged: false
    rs_node.vm.provision 'shell', inline: 'mongo mongodb://localhost:29017 init-replicaset-x509.js', privileged: false
    rs_node.vm.provision 'shell', inline: 'mongo mongodb://rs1.mongodb.test:27017,rs3.mongodb.test:27017/admin?replicaSet=replTest create-test-user.js', privileged: false
    rs_node.vm.provision 'shell', inline: 'mongo mongodb://rs1.mongodb.test:28017,rs3.mongodb.test:28017/admin?replicaSet=replTestTLS --ssl --sslCAFile tls/root.crt create-test-user.js', privileged: false
    rs_node.vm.provision 'shell', inline: 'mongo mongodb://rs1.mongodb.test:29017,rs3.mongodb.test:29017/admin?replicaSet=replTestX509 create-test-user-x509.js', privileged: false
  end

end
